{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GRID_SIZE=25;const CELL_SIZE=20;const INITIAL_SPEED=100;const DIRECTIONS={ArrowUp:{x:0,y:-1},w:{x:0,y:-1},ArrowDown:{x:0,y:1},s:{x:0,y:1},ArrowLeft:{x:-1,y:0},a:{x:-1,y:0},ArrowRight:{x:1,y:0},d:{x:1,y:0}};function SnakeGame(){// Game state\nconst[snake,setSnake]=useState([{x:10,y:10}]);const[food,setFood]=useState({x:5,y:5});const[direction,setDirection]=useState({x:1,y:0});const[gameOver,setGameOver]=useState(false);const[score,setScore]=useState(0);const[isPaused,setIsPaused]=useState(false);const[touchStart,setTouchStart]=useState(null);const[touchEnd,setTouchEnd]=useState(null);// Refs\nconst lastRenderTimeRef=useRef(0);const speed=useRef(INITIAL_SPEED);const gameAreaRef=useRef(null);const requestRef=useRef();// Generate food with collision check\nconst generateFood=useCallback(()=>{const newFood={x:Math.floor(Math.random()*GRID_SIZE),y:Math.floor(Math.random()*GRID_SIZE)};if(snake.some(segment=>segment.x===newFood.x&&segment.y===newFood.y)){return generateFood();}return newFood;},[snake]);// Handle keyboard input\nconst handleKeyPress=useCallback(e=>{if(e.key===' '){setIsPaused(prev=>!prev);return;}const newDirection=DIRECTIONS[e.key];if(newDirection){// Prevent 180-degree turns\nif(direction.x+newDirection.x!==0||direction.y+newDirection.y!==0){setDirection(newDirection);}}},[direction]);// Handle touch controls for mobile\nconst handleTouchStart=e=>{setTouchStart({x:e.touches[0].clientX,y:e.touches[0].clientY});};const handleTouchMove=e=>{setTouchEnd({x:e.touches[0].clientX,y:e.touches[0].clientY});};const handleTouchEnd=()=>{if(!touchStart||!touchEnd)return;const xDiff=touchEnd.x-touchStart.x;const yDiff=touchEnd.y-touchStart.y;// Determine swipe direction\nif(Math.abs(xDiff)>Math.abs(yDiff)){// Horizontal swipe\nif(xDiff>0&&direction.x!==-1){setDirection({x:1,y:0});// Right\n}else if(xDiff<0&&direction.x!==1){setDirection({x:-1,y:0});// Left\n}}else{// Vertical swipe\nif(yDiff>0&&direction.y!==-1){setDirection({x:0,y:1});// Down\n}else if(yDiff<0&&direction.y!==1){setDirection({x:0,y:-1});// Up\n}}setTouchStart(null);setTouchEnd(null);};// Game loop using requestAnimationFrame\nconst gameLoop=useCallback(timestamp=>{if(gameOver||isPaused)return;const deltaTime=timestamp-lastRenderTimeRef.current;if(deltaTime>=speed.current){setSnake(prevSnake=>{const head={x:prevSnake[0].x+direction.x,y:prevSnake[0].y+direction.y};// Check collisions\nif(head.x<0||head.x>=GRID_SIZE||head.y<0||head.y>=GRID_SIZE||prevSnake.some(segment=>segment.x===head.x&&segment.y===head.y)){setGameOver(true);return prevSnake;}const newSnake=[head,...prevSnake];if(head.x===food.x&&head.y===food.y){setFood(generateFood());setScore(prev=>prev+1);speed.current=Math.max(50,INITIAL_SPEED-score*2);}else{newSnake.pop();}return newSnake;});lastRenderTimeRef.current=timestamp;}requestRef.current=requestAnimationFrame(gameLoop);},[direction,food,gameOver,isPaused,generateFood,score]);// Set up and clean up game loop\nuseEffect(()=>{requestRef.current=requestAnimationFrame(gameLoop);return()=>cancelAnimationFrame(requestRef.current);},[gameLoop]);// Event listeners\nuseEffect(()=>{window.addEventListener('keydown',handleKeyPress);return()=>window.removeEventListener('keydown',handleKeyPress);},[handleKeyPress]);// Reset game\nconst resetGame=()=>{setSnake([{x:10,y:10}]);setFood(generateFood());setDirection({x:1,y:0});setGameOver(false);setScore(0);speed.current=INITIAL_SPEED;};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uD83D\\uDC0D Snake Game\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'10px'},children:[/*#__PURE__*/_jsxs(\"strong\",{children:[\"Score: \",score]}),\" |\",/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsPaused(prev=>!prev),children:isPaused?'Resume':'Pause'}),\" |\",/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,children:\"Restart\"})]}),/*#__PURE__*/_jsxs(\"div\",{ref:gameAreaRef,className:\"game-area\",onTouchStart:handleTouchStart,onTouchMove:handleTouchMove,onTouchEnd:handleTouchEnd,children:[snake.map((segment,i)=>/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:segment.x*CELL_SIZE,top:segment.y*CELL_SIZE,width:CELL_SIZE,height:CELL_SIZE,backgroundColor:i===0?'#2E8B57':'#3CB371',border:'1px solid #fff',borderRadius:i===0?'30%':'15%',transition:'transform 0.1s ease',transform:i===0?'scale(1.1)':'scale(1)'}},i)),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:food.x*CELL_SIZE,top:food.y*CELL_SIZE,width:CELL_SIZE,height:CELL_SIZE,backgroundColor:'#FF6347',borderRadius:'50%',boxShadow:'0 0 5px rgba(0,0,0,0.3)'}})]}),gameOver&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-over\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Game Over! Final Score: \",score]}),/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:\"play-again-button\",children:\"Play Again\"})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Controls: \",window.innerWidth>768?'WASD/Arrow Keys':'Swipe',\" | Tap to pause\"]})]})});}export default SnakeGame;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsx","_jsx","jsxs","_jsxs","GRID_SIZE","CELL_SIZE","INITIAL_SPEED","DIRECTIONS","ArrowUp","x","y","w","ArrowDown","s","ArrowLeft","a","ArrowRight","d","SnakeGame","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","isPaused","setIsPaused","touchStart","setTouchStart","touchEnd","setTouchEnd","lastRenderTimeRef","speed","gameAreaRef","requestRef","generateFood","newFood","Math","floor","random","some","segment","handleKeyPress","e","key","prev","newDirection","handleTouchStart","touches","clientX","clientY","handleTouchMove","handleTouchEnd","xDiff","yDiff","abs","gameLoop","timestamp","deltaTime","current","prevSnake","head","newSnake","max","pop","requestAnimationFrame","cancelAnimationFrame","window","addEventListener","removeEventListener","resetGame","className","children","style","marginBottom","onClick","ref","onTouchStart","onTouchMove","onTouchEnd","map","i","position","left","top","width","height","backgroundColor","border","borderRadius","transition","transform","boxShadow","innerWidth"],"sources":["D:/VScode/Snake_Game/snake-game/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport './App.css';\n\nconst GRID_SIZE = 25;\nconst CELL_SIZE = 20;\nconst INITIAL_SPEED = 100;\n\nconst DIRECTIONS = {\n  ArrowUp: { x: 0, y: -1 },\n  w: { x: 0, y: -1 },\n  ArrowDown: { x: 0, y: 1 },\n  s: { x: 0, y: 1 },\n  ArrowLeft: { x: -1, y: 0 },\n  a: { x: -1, y: 0 },\n  ArrowRight: { x: 1, y: 0 },\n  d: { x: 1, y: 0 }\n};\n\nfunction SnakeGame() {\n  // Game state\n  const [snake, setSnake] = useState([{ x: 10, y: 10 }]);\n  const [food, setFood] = useState({ x: 5, y: 5 });\n  const [direction, setDirection] = useState({ x: 1, y: 0 });\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const [touchStart, setTouchStart] = useState(null);\n  const [touchEnd, setTouchEnd] = useState(null);\n\n  // Refs\n  const lastRenderTimeRef = useRef(0);\n  const speed = useRef(INITIAL_SPEED);\n  const gameAreaRef = useRef(null);\n  const requestRef = useRef();\n\n  // Generate food with collision check\n  const generateFood = useCallback(() => {\n    const newFood = {\n      x: Math.floor(Math.random() * GRID_SIZE),\n      y: Math.floor(Math.random() * GRID_SIZE),\n    };\n    \n    if (snake.some(segment => segment.x === newFood.x && segment.y === newFood.y)) {\n      return generateFood();\n    }\n    return newFood;\n  }, [snake]);\n\n  // Handle keyboard input\n  const handleKeyPress = useCallback((e) => {\n    if (e.key === ' ') {\n      setIsPaused(prev => !prev);\n      return;\n    }\n\n    const newDirection = DIRECTIONS[e.key];\n    if (newDirection) {\n      // Prevent 180-degree turns\n      if (direction.x + newDirection.x !== 0 || direction.y + newDirection.y !== 0) {\n        setDirection(newDirection);\n      }\n    }\n  }, [direction]);\n\n  // Handle touch controls for mobile\n  const handleTouchStart = (e) => {\n    setTouchStart({\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY\n    });\n  };\n\n  const handleTouchMove = (e) => {\n    setTouchEnd({\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY\n    });\n  };\n\n  const handleTouchEnd = () => {\n    if (!touchStart || !touchEnd) return;\n    \n    const xDiff = touchEnd.x - touchStart.x;\n    const yDiff = touchEnd.y - touchStart.y;\n    \n    // Determine swipe direction\n    if (Math.abs(xDiff) > Math.abs(yDiff)) {\n      // Horizontal swipe\n      if (xDiff > 0 && direction.x !== -1) {\n        setDirection({ x: 1, y: 0 }); // Right\n      } else if (xDiff < 0 && direction.x !== 1) {\n        setDirection({ x: -1, y: 0 }); // Left\n      }\n    } else {\n      // Vertical swipe\n      if (yDiff > 0 && direction.y !== -1) {\n        setDirection({ x: 0, y: 1 }); // Down\n      } else if (yDiff < 0 && direction.y !== 1) {\n        setDirection({ x: 0, y: -1 }); // Up\n      }\n    }\n    \n    setTouchStart(null);\n    setTouchEnd(null);\n  };\n\n  // Game loop using requestAnimationFrame\n  const gameLoop = useCallback((timestamp) => {\n    if (gameOver || isPaused) return;\n    \n    const deltaTime = timestamp - lastRenderTimeRef.current;\n    \n    if (deltaTime >= speed.current) {\n      setSnake(prevSnake => {\n        const head = { \n          x: prevSnake[0].x + direction.x, \n          y: prevSnake[0].y + direction.y \n        };\n\n        // Check collisions\n        if (\n          head.x < 0 || head.x >= GRID_SIZE ||\n          head.y < 0 || head.y >= GRID_SIZE ||\n          prevSnake.some(segment => segment.x === head.x && segment.y === head.y)\n        ) {\n          setGameOver(true);\n          return prevSnake;\n        }\n\n        const newSnake = [head, ...prevSnake];\n        if (head.x === food.x && head.y === food.y) {\n          setFood(generateFood());\n          setScore(prev => prev + 1);\n          speed.current = Math.max(50, INITIAL_SPEED - (score * 2));\n        } else {\n          newSnake.pop();\n        }\n        return newSnake;\n      });\n      \n      lastRenderTimeRef.current = timestamp;\n    }\n    \n    requestRef.current = requestAnimationFrame(gameLoop);\n  }, [direction, food, gameOver, isPaused, generateFood, score]);\n\n  // Set up and clean up game loop\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(gameLoop);\n    return () => cancelAnimationFrame(requestRef.current);\n  }, [gameLoop]);\n\n  // Event listeners\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyPress);\n    return () => window.removeEventListener('keydown', handleKeyPress);\n  }, [handleKeyPress]);\n\n  // Reset game\n  const resetGame = () => {\n    setSnake([{ x: 10, y: 10 }]);\n    setFood(generateFood());\n    setDirection({ x: 1, y: 0 });\n    setGameOver(false);\n    setScore(0);\n    speed.current = INITIAL_SPEED;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>🐍 Snake Game</h1>\n        <div style={{ marginBottom: '10px' }}>\n          <strong>Score: {score}</strong> | \n          <button onClick={() => setIsPaused(prev => !prev)}>\n            {isPaused ? 'Resume' : 'Pause'}\n          </button> |\n          <button onClick={resetGame}>Restart</button>\n        </div>\n        \n        <div\n          ref={gameAreaRef}\n          className=\"game-area\"\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        >\n          {snake.map((segment, i) => (\n            <div\n              key={i}\n              style={{\n                position: 'absolute',\n                left: segment.x * CELL_SIZE,\n                top: segment.y * CELL_SIZE,\n                width: CELL_SIZE,\n                height: CELL_SIZE,\n                backgroundColor: i === 0 ? '#2E8B57' : '#3CB371',\n                border: '1px solid #fff',\n                borderRadius: i === 0 ? '30%' : '15%',\n                transition: 'transform 0.1s ease',\n                transform: i === 0 ? 'scale(1.1)' : 'scale(1)'\n              }}\n            />\n          ))}\n          <div\n            style={{\n              position: 'absolute',\n              left: food.x * CELL_SIZE,\n              top: food.y * CELL_SIZE,\n              width: CELL_SIZE,\n              height: CELL_SIZE,\n              backgroundColor: '#FF6347',\n              borderRadius: '50%',\n              boxShadow: '0 0 5px rgba(0,0,0,0.3)'\n            }}\n          />\n        </div>\n\n        {gameOver && (\n          <div className=\"game-over\">\n            <h2>Game Over! Final Score: {score}</h2>\n            <button \n              onClick={resetGame}\n              className=\"play-again-button\"\n            >\n              Play Again\n            </button>\n          </div>\n        )}\n        \n        <p>Controls: {window.innerWidth > 768 ? 'WASD/Arrow Keys' : 'Swipe'} | Tap to pause</p>\n      </header>\n    </div>\n  );\n}\n\nexport default SnakeGame;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,WAAW,CAAEC,MAAM,KAAQ,OAAO,CACvE,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnB,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpB,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpB,KAAM,CAAAC,aAAa,CAAG,GAAG,CAEzB,KAAM,CAAAC,UAAU,CAAG,CACjBC,OAAO,CAAE,CAAEC,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAE,CAAC,CACxBC,CAAC,CAAE,CAAEF,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAE,CAAC,CAClBE,SAAS,CAAE,CAAEH,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CACzBG,CAAC,CAAE,CAAEJ,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CACjBI,SAAS,CAAE,CAAEL,CAAC,CAAE,CAAC,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAC1BK,CAAC,CAAE,CAAEN,CAAC,CAAE,CAAC,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAClBM,UAAU,CAAE,CAAEP,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAC1BO,CAAC,CAAE,CAAER,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAClB,CAAC,CAED,QAAS,CAAAQ,SAASA,CAAA,CAAG,CACnB;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGxB,QAAQ,CAAC,CAAC,CAAEa,CAAC,CAAE,EAAE,CAAEC,CAAC,CAAE,EAAG,CAAC,CAAC,CAAC,CACtD,KAAM,CAACW,IAAI,CAAEC,OAAO,CAAC,CAAG1B,QAAQ,CAAC,CAAEa,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAChD,KAAM,CAACa,SAAS,CAAEC,YAAY,CAAC,CAAG5B,QAAQ,CAAC,CAAEa,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAC1D,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAG9B,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAAC+B,KAAK,CAAEC,QAAQ,CAAC,CAAGhC,QAAQ,CAAC,CAAC,CAAC,CACrC,KAAM,CAACiC,QAAQ,CAAEC,WAAW,CAAC,CAAGlC,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACmC,UAAU,CAAEC,aAAa,CAAC,CAAGpC,QAAQ,CAAC,IAAI,CAAC,CAClD,KAAM,CAACqC,QAAQ,CAAEC,WAAW,CAAC,CAAGtC,QAAQ,CAAC,IAAI,CAAC,CAE9C;AACA,KAAM,CAAAuC,iBAAiB,CAAGpC,MAAM,CAAC,CAAC,CAAC,CACnC,KAAM,CAAAqC,KAAK,CAAGrC,MAAM,CAACO,aAAa,CAAC,CACnC,KAAM,CAAA+B,WAAW,CAAGtC,MAAM,CAAC,IAAI,CAAC,CAChC,KAAM,CAAAuC,UAAU,CAAGvC,MAAM,CAAC,CAAC,CAE3B;AACA,KAAM,CAAAwC,YAAY,CAAGzC,WAAW,CAAC,IAAM,CACrC,KAAM,CAAA0C,OAAO,CAAG,CACd/B,CAAC,CAAEgC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGvC,SAAS,CAAC,CACxCM,CAAC,CAAE+B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAGvC,SAAS,CACzC,CAAC,CAED,GAAIe,KAAK,CAACyB,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACpC,CAAC,GAAK+B,OAAO,CAAC/B,CAAC,EAAIoC,OAAO,CAACnC,CAAC,GAAK8B,OAAO,CAAC9B,CAAC,CAAC,CAAE,CAC7E,MAAO,CAAA6B,YAAY,CAAC,CAAC,CACvB,CACA,MAAO,CAAAC,OAAO,CAChB,CAAC,CAAE,CAACrB,KAAK,CAAC,CAAC,CAEX;AACA,KAAM,CAAA2B,cAAc,CAAGhD,WAAW,CAAEiD,CAAC,EAAK,CACxC,GAAIA,CAAC,CAACC,GAAG,GAAK,GAAG,CAAE,CACjBlB,WAAW,CAACmB,IAAI,EAAI,CAACA,IAAI,CAAC,CAC1B,OACF,CAEA,KAAM,CAAAC,YAAY,CAAG3C,UAAU,CAACwC,CAAC,CAACC,GAAG,CAAC,CACtC,GAAIE,YAAY,CAAE,CAChB;AACA,GAAI3B,SAAS,CAACd,CAAC,CAAGyC,YAAY,CAACzC,CAAC,GAAK,CAAC,EAAIc,SAAS,CAACb,CAAC,CAAGwC,YAAY,CAACxC,CAAC,GAAK,CAAC,CAAE,CAC5Ec,YAAY,CAAC0B,YAAY,CAAC,CAC5B,CACF,CACF,CAAC,CAAE,CAAC3B,SAAS,CAAC,CAAC,CAEf;AACA,KAAM,CAAA4B,gBAAgB,CAAIJ,CAAC,EAAK,CAC9Bf,aAAa,CAAC,CACZvB,CAAC,CAAEsC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CACvB3C,CAAC,CAAEqC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACE,OAClB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,eAAe,CAAIR,CAAC,EAAK,CAC7Bb,WAAW,CAAC,CACVzB,CAAC,CAAEsC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CACvB3C,CAAC,CAAEqC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACE,OAClB,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,cAAc,CAAGA,CAAA,GAAM,CAC3B,GAAI,CAACzB,UAAU,EAAI,CAACE,QAAQ,CAAE,OAE9B,KAAM,CAAAwB,KAAK,CAAGxB,QAAQ,CAACxB,CAAC,CAAGsB,UAAU,CAACtB,CAAC,CACvC,KAAM,CAAAiD,KAAK,CAAGzB,QAAQ,CAACvB,CAAC,CAAGqB,UAAU,CAACrB,CAAC,CAEvC;AACA,GAAI+B,IAAI,CAACkB,GAAG,CAACF,KAAK,CAAC,CAAGhB,IAAI,CAACkB,GAAG,CAACD,KAAK,CAAC,CAAE,CACrC;AACA,GAAID,KAAK,CAAG,CAAC,EAAIlC,SAAS,CAACd,CAAC,GAAK,CAAC,CAAC,CAAE,CACnCe,YAAY,CAAC,CAAEf,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAAE;AAChC,CAAC,IAAM,IAAI+C,KAAK,CAAG,CAAC,EAAIlC,SAAS,CAACd,CAAC,GAAK,CAAC,CAAE,CACzCe,YAAY,CAAC,CAAEf,CAAC,CAAE,CAAC,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAAE;AACjC,CACF,CAAC,IAAM,CACL;AACA,GAAIgD,KAAK,CAAG,CAAC,EAAInC,SAAS,CAACb,CAAC,GAAK,CAAC,CAAC,CAAE,CACnCc,YAAY,CAAC,CAAEf,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAAE;AAChC,CAAC,IAAM,IAAIgD,KAAK,CAAG,CAAC,EAAInC,SAAS,CAACb,CAAC,GAAK,CAAC,CAAE,CACzCc,YAAY,CAAC,CAAEf,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAC,CAAE,CAAC,CAAC,CAAE;AACjC,CACF,CAEAsB,aAAa,CAAC,IAAI,CAAC,CACnBE,WAAW,CAAC,IAAI,CAAC,CACnB,CAAC,CAED;AACA,KAAM,CAAA0B,QAAQ,CAAG9D,WAAW,CAAE+D,SAAS,EAAK,CAC1C,GAAIpC,QAAQ,EAAII,QAAQ,CAAE,OAE1B,KAAM,CAAAiC,SAAS,CAAGD,SAAS,CAAG1B,iBAAiB,CAAC4B,OAAO,CAEvD,GAAID,SAAS,EAAI1B,KAAK,CAAC2B,OAAO,CAAE,CAC9B3C,QAAQ,CAAC4C,SAAS,EAAI,CACpB,KAAM,CAAAC,IAAI,CAAG,CACXxD,CAAC,CAAEuD,SAAS,CAAC,CAAC,CAAC,CAACvD,CAAC,CAAGc,SAAS,CAACd,CAAC,CAC/BC,CAAC,CAAEsD,SAAS,CAAC,CAAC,CAAC,CAACtD,CAAC,CAAGa,SAAS,CAACb,CAChC,CAAC,CAED;AACA,GACEuD,IAAI,CAACxD,CAAC,CAAG,CAAC,EAAIwD,IAAI,CAACxD,CAAC,EAAIL,SAAS,EACjC6D,IAAI,CAACvD,CAAC,CAAG,CAAC,EAAIuD,IAAI,CAACvD,CAAC,EAAIN,SAAS,EACjC4D,SAAS,CAACpB,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACpC,CAAC,GAAKwD,IAAI,CAACxD,CAAC,EAAIoC,OAAO,CAACnC,CAAC,GAAKuD,IAAI,CAACvD,CAAC,CAAC,CACvE,CACAgB,WAAW,CAAC,IAAI,CAAC,CACjB,MAAO,CAAAsC,SAAS,CAClB,CAEA,KAAM,CAAAE,QAAQ,CAAG,CAACD,IAAI,CAAE,GAAGD,SAAS,CAAC,CACrC,GAAIC,IAAI,CAACxD,CAAC,GAAKY,IAAI,CAACZ,CAAC,EAAIwD,IAAI,CAACvD,CAAC,GAAKW,IAAI,CAACX,CAAC,CAAE,CAC1CY,OAAO,CAACiB,YAAY,CAAC,CAAC,CAAC,CACvBX,QAAQ,CAACqB,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC1Bb,KAAK,CAAC2B,OAAO,CAAGtB,IAAI,CAAC0B,GAAG,CAAC,EAAE,CAAE7D,aAAa,CAAIqB,KAAK,CAAG,CAAE,CAAC,CAC3D,CAAC,IAAM,CACLuC,QAAQ,CAACE,GAAG,CAAC,CAAC,CAChB,CACA,MAAO,CAAAF,QAAQ,CACjB,CAAC,CAAC,CAEF/B,iBAAiB,CAAC4B,OAAO,CAAGF,SAAS,CACvC,CAEAvB,UAAU,CAACyB,OAAO,CAAGM,qBAAqB,CAACT,QAAQ,CAAC,CACtD,CAAC,CAAE,CAACrC,SAAS,CAAEF,IAAI,CAAEI,QAAQ,CAAEI,QAAQ,CAAEU,YAAY,CAAEZ,KAAK,CAAC,CAAC,CAE9D;AACA9B,SAAS,CAAC,IAAM,CACdyC,UAAU,CAACyB,OAAO,CAAGM,qBAAqB,CAACT,QAAQ,CAAC,CACpD,MAAO,IAAMU,oBAAoB,CAAChC,UAAU,CAACyB,OAAO,CAAC,CACvD,CAAC,CAAE,CAACH,QAAQ,CAAC,CAAC,CAEd;AACA/D,SAAS,CAAC,IAAM,CACd0E,MAAM,CAACC,gBAAgB,CAAC,SAAS,CAAE1B,cAAc,CAAC,CAClD,MAAO,IAAMyB,MAAM,CAACE,mBAAmB,CAAC,SAAS,CAAE3B,cAAc,CAAC,CACpE,CAAC,CAAE,CAACA,cAAc,CAAC,CAAC,CAEpB;AACA,KAAM,CAAA4B,SAAS,CAAGA,CAAA,GAAM,CACtBtD,QAAQ,CAAC,CAAC,CAAEX,CAAC,CAAE,EAAE,CAAEC,CAAC,CAAE,EAAG,CAAC,CAAC,CAAC,CAC5BY,OAAO,CAACiB,YAAY,CAAC,CAAC,CAAC,CACvBf,YAAY,CAAC,CAAEf,CAAC,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAC,CAC5BgB,WAAW,CAAC,KAAK,CAAC,CAClBE,QAAQ,CAAC,CAAC,CAAC,CACXQ,KAAK,CAAC2B,OAAO,CAAGzD,aAAa,CAC/B,CAAC,CAED,mBACEL,IAAA,QAAK0E,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBzE,KAAA,WAAQwE,SAAS,CAAC,YAAY,CAAAC,QAAA,eAC5B3E,IAAA,OAAA2E,QAAA,CAAI,yBAAa,CAAI,CAAC,cACtBzE,KAAA,QAAK0E,KAAK,CAAE,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAF,QAAA,eACnCzE,KAAA,WAAAyE,QAAA,EAAQ,SAAO,CAACjD,KAAK,EAAS,CAAC,KAC/B,cAAA1B,IAAA,WAAQ8E,OAAO,CAAEA,CAAA,GAAMjD,WAAW,CAACmB,IAAI,EAAI,CAACA,IAAI,CAAE,CAAA2B,QAAA,CAC/C/C,QAAQ,CAAG,QAAQ,CAAG,OAAO,CACxB,CAAC,KACT,cAAA5B,IAAA,WAAQ8E,OAAO,CAAEL,SAAU,CAAAE,QAAA,CAAC,SAAO,CAAQ,CAAC,EACzC,CAAC,cAENzE,KAAA,QACE6E,GAAG,CAAE3C,WAAY,CACjBsC,SAAS,CAAC,WAAW,CACrBM,YAAY,CAAE9B,gBAAiB,CAC/B+B,WAAW,CAAE3B,eAAgB,CAC7B4B,UAAU,CAAE3B,cAAe,CAAAoB,QAAA,EAE1BzD,KAAK,CAACiE,GAAG,CAAC,CAACvC,OAAO,CAAEwC,CAAC,gBACpBpF,IAAA,QAEE4E,KAAK,CAAE,CACLS,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAE1C,OAAO,CAACpC,CAAC,CAAGJ,SAAS,CAC3BmF,GAAG,CAAE3C,OAAO,CAACnC,CAAC,CAAGL,SAAS,CAC1BoF,KAAK,CAAEpF,SAAS,CAChBqF,MAAM,CAAErF,SAAS,CACjBsF,eAAe,CAAEN,CAAC,GAAK,CAAC,CAAG,SAAS,CAAG,SAAS,CAChDO,MAAM,CAAE,gBAAgB,CACxBC,YAAY,CAAER,CAAC,GAAK,CAAC,CAAG,KAAK,CAAG,KAAK,CACrCS,UAAU,CAAE,qBAAqB,CACjCC,SAAS,CAAEV,CAAC,GAAK,CAAC,CAAG,YAAY,CAAG,UACtC,CAAE,EAZGA,CAaN,CACF,CAAC,cACFpF,IAAA,QACE4E,KAAK,CAAE,CACLS,QAAQ,CAAE,UAAU,CACpBC,IAAI,CAAElE,IAAI,CAACZ,CAAC,CAAGJ,SAAS,CACxBmF,GAAG,CAAEnE,IAAI,CAACX,CAAC,CAAGL,SAAS,CACvBoF,KAAK,CAAEpF,SAAS,CAChBqF,MAAM,CAAErF,SAAS,CACjBsF,eAAe,CAAE,SAAS,CAC1BE,YAAY,CAAE,KAAK,CACnBG,SAAS,CAAE,yBACb,CAAE,CACH,CAAC,EACC,CAAC,CAELvE,QAAQ,eACPtB,KAAA,QAAKwE,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzE,KAAA,OAAAyE,QAAA,EAAI,0BAAwB,CAACjD,KAAK,EAAK,CAAC,cACxC1B,IAAA,WACE8E,OAAO,CAAEL,SAAU,CACnBC,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAC9B,YAED,CAAQ,CAAC,EACN,CACN,cAEDzE,KAAA,MAAAyE,QAAA,EAAG,YAAU,CAACL,MAAM,CAAC0B,UAAU,CAAG,GAAG,CAAG,iBAAiB,CAAG,OAAO,CAAC,iBAAe,EAAG,CAAC,EACjF,CAAC,CACN,CAAC,CAEV,CAEA,cAAe,CAAA/E,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}